// <auto-generated />
using System;
using HotelMVCIs.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelMVCIs.Migrations
{
    [DbContext(typeof(HotelMVCIsDbContext))]
    [Migration("20250624173334_AddGuests")]
    partial class AddGuests
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelMVCIs.Models.Guest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Guests");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            Address = "Václavské náměstí 1",
                            City = "Praha",
                            DateOfBirth = new DateTime(1985, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jan.novak@example.com",
                            FirstName = "Jan",
                            LastName = "Novák",
                            Nationality = "Česká republika",
                            PhoneNumber = "123 456 789",
                            PostalCode = "110 00"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Náměstí Svobody 15",
                            City = "Brno",
                            DateOfBirth = new DateTime(1992, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "eva.dvorakova@example.com",
                            FirstName = "Eva",
                            LastName = "Dvořáková",
                            Nationality = "Česká republika",
                            PhoneNumber = "987 654 321",
                            PostalCode = "602 00"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Masarykovo náměstí 5",
                            City = "Ostrava",
                            DateOfBirth = new DateTime(1978, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "petr.cerny@example.com",
                            FirstName = "Petr",
                            LastName = "Černý",
                            Nationality = "Česká republika",
                            PhoneNumber = "555 111 222",
                            PostalCode = "702 00"
                        },
                        new
                        {
                            Id = 6,
                            Address = "Americká 42",
                            City = "Plzeň",
                            DateOfBirth = new DateTime(2001, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jana.svobodova@example.com",
                            FirstName = "Jana",
                            LastName = "Svobodová",
                            Nationality = "Česká republika",
                            PhoneNumber = "444 555 666",
                            PostalCode = "301 00"
                        },
                        new
                        {
                            Id = 7,
                            Address = "10 Downing Street",
                            City = "London",
                            DateOfBirth = new DateTime(1990, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john.smith@example.co.uk",
                            FirstName = "John",
                            LastName = "Smith",
                            Nationality = "United Kingdom",
                            PhoneNumber = "+44 20 7946 0958",
                            PostalCode = "SW1A 2AA"
                        },
                        new
                        {
                            Id = 8,
                            Address = "Gran Vía 28",
                            City = "Madrid",
                            DateOfBirth = new DateTime(1988, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "maria.garcia@example.es",
                            FirstName = "Maria",
                            LastName = "Garcia",
                            Nationality = "Spain",
                            PhoneNumber = "+34 917 123 456",
                            PostalCode = "28013"
                        },
                        new
                        {
                            Id = 9,
                            Address = "Unter den Linden 77",
                            City = "Berlin",
                            DateOfBirth = new DateTime(1982, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hans.muller@example.de",
                            FirstName = "Hans",
                            LastName = "Müller",
                            Nationality = "Germany",
                            PhoneNumber = "+49 30 1234567",
                            PostalCode = "10117"
                        },
                        new
                        {
                            Id = 10,
                            Address = "Nowy Świat 1",
                            City = "Warsaw",
                            DateOfBirth = new DateTime(1995, 12, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "anna.kowalska@example.pl",
                            FirstName = "Anna",
                            LastName = "Kowalska",
                            Nationality = "Poland",
                            PhoneNumber = "+48 22 123 45 67",
                            PostalCode = "00-400"
                        },
                        new
                        {
                            Id = 11,
                            Address = "Via del Corso 1",
                            City = "Rome",
                            DateOfBirth = new DateTime(1975, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "luca.rossi@example.it",
                            FirstName = "Luca",
                            LastName = "Rossi",
                            Nationality = "Italy",
                            PhoneNumber = "+39 06 12345678",
                            PostalCode = "00186"
                        },
                        new
                        {
                            Id = 12,
                            Address = "Pražská 123",
                            City = "Liberec",
                            DateOfBirth = new DateTime(1999, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "martin.prochazka@example.com",
                            FirstName = "Martin",
                            LastName = "Procházka",
                            Nationality = "Česká republika",
                            PhoneNumber = "777 888 999",
                            PostalCode = "460 01"
                        });
                });

            modelBuilder.Entity("HotelMVCIs.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("HotelMVCIs.Models.RoomType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("RoomTypes");
                });

            modelBuilder.Entity("HotelMVCIs.Models.Room", b =>
                {
                    b.HasOne("HotelMVCIs.Models.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("HotelMVCIs.Models.RoomType", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
